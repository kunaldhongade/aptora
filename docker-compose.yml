services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aptora-postgres
    environment:
      POSTGRES_DB: aptora_db
      POSTGRES_USER: aptora_user
      POSTGRES_PASSWORD: aptora_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - aptora-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aptora_user -d aptora_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: aptora-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@aptora.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - aptora-network
    depends_on:
      postgres:
        condition: service_healthy

  # Rust Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: aptora-backend
    environment:
      - DATABASE_URL=postgresql://aptora_user:aptora_password@postgres:5432/aptora_db
      - HOST=0.0.0.0
      - PORT=8080
      - JWT_SECRET=dev-jwt-secret-change-in-production
      - KANA_API_KEY=${KANA_API_KEY}
      - KANA_API_BASE_URL=https://perps-tradeapi.kanalabs.io
      - APTOS_API_KEY=${APTOS_API_KEY}
      - APTOS_NETWORK=testnet
      - RUST_LOG=debug
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:4173
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
      - cargo_cache:/usr/local/cargo/registry
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - aptora-network
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Installing Diesel CLI...' &&
        cargo install diesel_cli --version 2.1.1 --no-default-features --features postgres &&
        echo 'Running migrations...' &&
        diesel migration run &&
        echo 'Starting backend server...' &&
        cargo watch -x run
      "

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: aptora-frontend
    environment:
      - VITE_API_BASE_URL=http://localhost:8080/api
      - VITE_APP_NAME=Aptora
      - VITE_APP_VERSION=1.0.0
      - VITE_ENABLE_ANALYTICS=false
      - VITE_ENABLE_DEBUG_MODE=true
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - aptora-network
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Installing dependencies...' &&
        npm install &&
        echo 'Starting frontend dev server...' &&
        npm run dev -- --host 0.0.0.0
      "

volumes:
  postgres_data:
  pgadmin_data:
  cargo_cache:

networks:
  aptora-network:
    driver: bridge
